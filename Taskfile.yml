version: '3'

tasks:
  up:
    desc: "Run all microservices and theirs dependencies."
    cmds:
      - task: create_logs_folder
      - task: create_migrations_folders
      - task: docker_build
      - task: docker_run
      - task: copy_sso_migrations
      - task: migrate_sso
      - task: copy_toys_migrations
      - task: migrate_toys
      - task: copy_tickets_migrations
      - task: migrate_tickets
      - task: copy_notifications_migrations
      - task: migrate_notifications

  down:
    desc: "Shutdown all microservices and theirs dependencies."
    cmds:
      - task: docker_stop

  create_logs_folder:
    desc: "Create logs folder for docker volume purposes."
    internal: true
    cmds:
      - mkdir -p logs/hmtm_bff
      - mkdir -p logs/hmtm_sso
      - mkdir -p logs/hmtm_toys
      - mkdir -p logs/hmtm_tickets
      - mkdir -p logs/hmtm_notifications

  create_migrations_folders:
    desc: "Create migrations folders for docker volume purposes."
    internal: true
    cmds:
      - mkdir -p migrations/hmtm_sso
      - mkdir -p migrations/hmtm_toys
      - mkdir -p migrations/hmtm_tickets
      - mkdir -p migrations/hmtm_notifications

  copy_sso_migrations:
    desc: "
    Copy SSO service migrations from docker volume.
    https://stackoverflow.com/questions/32566624/docker-cp-all-files-from-a-folder-to-existing-container-folder 
    https://docs.docker.com/reference/cli/docker/container/cp/
    "
    internal: true
    cmd: sudo docker cp hmtm_sso:/app/migrations/. ./migrations/hmtm_sso

  copy_toys_migrations:
    desc: "Copy Toys service migrations from docker volume."
    internal: true
    cmd: sudo docker cp hmtm_toys:/app/migrations/. ./migrations/hmtm_toys

  copy_tickets_migrations:
    desc: "Copy Tickets service migrations from docker volume."
    internal: true
    cmd: sudo docker cp hmtm_tickets:/app/migrations/. ./migrations/hmtm_tickets

  copy_notifications_migrations:
    desc: "Copy Notifications service migrations from docker volume."
    internal: true
    cmd: sudo docker cp hmtm_notifications:/app/migrations/. ./migrations/hmtm_notifications

  docker_build:
    desc: "Build docker container."
    cmd: sudo docker compose build

  docker_run:
    desc: "Launch docker container."
    cmd: sudo docker compose up -d

  docker_stop:
    desc: "Stop all docker containers."
    cmd:  sudo docker stop $(sudo docker ps -a -q)

  docker_clean:
    desc: "Clean docker containers, images and volumes."
    cmd: sudo docker system prune -a --volumes

  migrate_sso:
    desc: "Apply all available migrations for SSO service."
    internal: true
    dotenv:
      - .env
      - .env.sso
    vars:
      DIR: ./migrations/hmtm_sso
      DRIVER: $POSTGRES_DRIVER
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$HMTM_SSO_DB_OUTER_HOST:$HMTM_SSO_DB_OUTER_PORT/$POSTGRES_DB"
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up

  migrate_toys:
    desc: "Apply all available migrations for Toys service."
    internal: true
    dotenv:
      - .env
      - .env.toys
    vars:
      DIR: ./migrations/hmtm_toys
      DRIVER: $POSTGRES_DRIVER
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$HMTM_TOYS_DB_OUTER_HOST:$HMTM_TOYS_DB_OUTER_PORT/$POSTGRES_DB"
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up

  migrate_tickets:
    desc: "Apply all available migrations for Tickets service."
    internal: true
    dotenv:
      - .env
      - .env.tickets
    vars:
      DIR: ./migrations/hmtm_tickets
      DRIVER: $POSTGRES_DRIVER
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$HMTM_TICKETS_DB_OUTER_HOST:$HMTM_TICKETS_DB_OUTER_PORT/$POSTGRES_DB"
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up

  migrate_notifications:
    desc: "Apply all available migrations for Notifications service."
    internal: true
    dotenv:
      - .env
      - .env.notifications
    vars:
      DIR: ./migrations/hmtm_notifications
      DRIVER: $POSTGRES_DRIVER
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$HMTM_NOTIFICATIONS_DB_OUTER_HOST:$HMTM_NOTIFICATIONS_DB_OUTER_PORT/$POSTGRES_DB"
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - goose -dir {{.DIR}} {{.DRIVER}} {{.DATABASE_URL}} up

  clean_up:
    desc: "Clean up all folders, docker volumes, images and containers."
    aliases:
      - clean
    cmds:
      - sudo rm -rf logs/
      - sudo rm -rf migrations/
      - sudo rm -rf postgres_data/
      - sudo rm -rf postgres_backups/
      - task: docker_clean

  docker_network:
    desc: "Create docker network for project."
    aliases:
      - network
    cmd: sudo docker network create hmtm_network
